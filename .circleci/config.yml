version: 2.1
orbs:
  go: gotest/tools@0.0.13

executors:
  golang-with-postgres:
    docker:
      - image: cimg/go:1.16
      - image: circleci/postgres:9.6.2-alpine
    resource_class: 2xlarge

commands:
  checkout-dealbot:
    steps:
      - checkout
  install-lotus:
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install ocl-icd-opencl-dev libhwloc-dev
      - run: git clone https://github.com/filecoin-project/lotus.git /tmp/lotus
      - run: cd /tmp/lotus && git submodule sync && git submodule update --init
      - run: cd /tmp/lotus && make debug && sudo make install
      - run: cd /tmp/lotus && sudo cp lotus-seed /usr/local/bin
  test-dealbot:
    steps:
      - run: go build -o ./devnet-binary cmd/devnet/*.go
      - run: go build -o dealbot-binary
      - run: sudo cp devnet-binary /usr/local/bin/devnet
      - run: sudo cp dealbot-binary /usr/local/bin/dealbot
      - run: ./integration_tests/01_storage_retrieval_ok.sh
      # TODO(mvdan): reenable once we can get it working on Circle
      # - run: ./integration_tests/02_controller_daemon.sh
  docker-login:
    steps:
      - run:
          command: echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  build-and-test:
    executor: golang-with-postgres
    environment:
      POSTGRES_USER=postgres
      POSTGRES_DB=circle_test
    steps:
      - run:
          name: install dockerize
          command: curl -LO https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: wait for database
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - checkout-dealbot
      - install-lotus
      - test-dealbot
  build-push:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout-dealbot
      - docker-login
      - run:
          name: docker build
          command: |
            DOCKER_REPO=filecoin/dealbot
            DOCKER_TAG=$CIRCLE_SHA1
            echo "export DOCKER_REPO=$DOCKER_REPO" >> $BASH_ENV
            echo "export DOCKER_TAG=$DOCKER_TAG" >> $BASH_ENV
            docker build -t "${DOCKER_REPO}:${DOCKER_TAG}" .
            docker push "${DOCKER_REPO}:${DOCKER_TAG}"
  deploy-lotusinfra:
    docker:
      - image: cimg/base:2021.04
    parameters:
      namespace:
        type: string
      release:
        type: string
    steps:
      - run:
          name: submit deploy job
          command: |
            curl --request POST \
            --url https://circleci.com/api/v2/project/gh/filecoin-project/lotus-infra/pipeline \
            --header "Circle-Token: $CIRCLE_TOKEN" \
            --header "content-type: application/json" \
            --data "{
              \"parameters\":{
                \"api_workflow_requested\": \"helm-deploy\",
                \"namespace\": \"<< parameters.namespace >>\",
                \"release\": \"<< parameters.release >>\",
                \"chart\": \"filecoin/dealbot\",
                \"chart_version\": \"0.0.1\",
                \"override_repository\": \"filecoin/dealbot\",
                \"override_tag\": \"$CIRCLE_SHA1\"
              }}"


workflows:
  version: 2.1
  ci:
    jobs:
      - build-and-test
      - build-push:
          requires:
            - build-and-test
      - deploy-lotusinfra:
          name: deploy-nerpanet
          namespace: ntwk-nerpanet-dealbot
          release: dealbot-0
          requires:
            - build-push
          filters:
            branches:
              only:
                - main
